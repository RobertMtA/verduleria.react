import React, { useState, useEffect } from 'react';
import { useAuth } from '../context/AuthContext';
import Rese√±as from '../components/Rese√±as';
import FormularioRese√±a from '../components/FormularioRese√±a';
import corsProxyService from '../services/corsProxyService';
import './Resenas.css';

const ResenasPage = () => {
  const { isAuthenticated, user } = useAuth();
  const [rese√±as, setRese√±as] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const cargarRese√±as = async () => {
    try {
      setLoading(true);
      console.log('üîÑ Cargando rese√±as p√∫blicas con corsProxyService...');
      
      const data = await corsProxyService.getResenas(true); // publicas=true
      
      console.log('üìã Respuesta de rese√±as:', data);
      
      if (data && (Array.isArray(data) || (data.success && data.rese√±as))) {
        const rese√±asArray = Array.isArray(data) ? data : (data.rese√±as || []);
        console.log(`‚úÖ ${rese√±asArray.length} rese√±as p√∫blicas cargadas`);
        setRese√±as(rese√±asArray);
        setError(null);
      } else {
        console.log('‚ö†Ô∏è No hay rese√±as p√∫blicas disponibles');
        setError('No hay rese√±as disponibles en este momento');
        setRese√±as([]);
      }
    } catch (error) {
      console.error('‚ùå Error cargando rese√±as:', error);
      setError('Error de conexi√≥n al cargar las rese√±as');
      setRese√±as([]);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    cargarRese√±as();
  }, []);

  const handleRese√±aEnviada = () => {
    // Recargar las rese√±as despu√©s de enviar una nueva
    cargarRese√±as();
  };

  return (
    <div className="resenas-page">
      <div className="container">
        <h1 className="page-title">
          <i className="fas fa-star"></i> Rese√±as de Nuestros Clientes
        </h1>
        <p className="page-subtitle">
          Conoce lo que opinan nuestros clientes sobre nuestros productos y servicio
        </p>

        {/* Formulario para escribir rese√±a (solo usuarios autenticados) */}
        {isAuthenticated && (
          <div className="formulario-resena-section">
            <h2>Escribe tu rese√±a</h2>
            <FormularioRese√±a onRese√±aEnviada={handleRese√±aEnviada} />
          </div>
        )}

        {/* Mensaje para usuarios no autenticados */}
        {!isAuthenticated && (
          <div className="login-prompt">
            <p>
              <i className="fas fa-info-circle"></i>
              Para escribir una rese√±a, <a href="/login">inicia sesi√≥n</a> o <a href="/registro">reg√≠strate</a>
            </p>
          </div>
        )}

        {/* Lista de rese√±as p√∫blicas */}
        <div className="resenas-section">
          <h2>Todas las Rese√±as</h2>
          {loading ? (
            <div className="loading">
              <i className="fas fa-spinner fa-spin"></i> Cargando rese√±as...
            </div>
          ) : error ? (
            <div className="error">
              <i className="fas fa-exclamation-triangle"></i> {error}
            </div>
          ) : (
            <Rese√±as rese√±as={rese√±as} />
          )}
        </div>
      </div>
    </div>
  );
};

export default ResenasPage;
